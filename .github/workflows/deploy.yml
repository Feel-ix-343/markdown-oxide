name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-and-upload:
    name: Build and Upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
       include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: true

          - build: linux
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            use-cross: true

          - build: macos
            os: macos-latest
            target: aarch64-apple-darwin
            use-cross: true

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
            use-cross: false
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: ${{matrix.target}}
          override: true
          rustflags: ""

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Update Cargo.toml with version number
        shell: bash
        run: |
          # strip leading "v" from tag
          version_num="$(echo "${VERSION}" | cut -c 2-)"
          # edit version number in Cargo.toml
          sed -r \
            -i.bak \
            -e "s|^version = \"\\S+\"|version = \"${version_num}\"|" \
            Cargo.toml

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="markdown-oxide"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            cp "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV

            rm -rd $dirname
            cp "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname.exe"
            echo "BIN=$dirname.exe" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV

            rm -rd $dirname
            cp "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            echo "BIN=$dirname" >> $GITHUB_ENV
          fi

      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
            ${{ env.BIN }}
